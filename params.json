{"name":"VolumeManager","tagline":"It's Disk Utility for Objective-C","body":"### Because DiskArbitration is Unwieldy.\r\nIf you've ever had to do more with a disk than NSFileManager provides, you've felt the pain. DiskArbitration is C-based, requires C-style callbacks, and makes you look up what options to pass *every single time*. VolumeManager exists to save you that trouble. It is a pure Objective-C interface and implements the standard delegate/protocol model to allow you to keep cruisin' without dropping in a few hundred extra lines of C.\r\n\r\n### Getting Started\r\n\r\nIf you're looking for a list of all of the volumes currently mounted, it's easy:\r\n\r\n```\r\nNSArray* volumes = [[[VolumeManager alloc] init] mountedVolumes];\r\n```\r\n\r\nTo eject a volume:\r\n\r\n```\r\n[[[VolumeManager alloc] init] unmountAndEjectVolumeAt:[NSURL fileURLWithPath:@\"/path/to/mountpoint\"]];\r\n```\r\n\r\nYou get the idea.\r\n\r\n### Delegate Features\r\nBecause we're so nice, VolumeManager can inform your delegate of:\r\n\r\n- Pending mount, unmount, and eject events\r\n- Mount, unmount, and eject events as soon as they take place\r\n\r\nYour delegate can also arbitrate mount, unmount, and eject requests, allowing you to choose if and when a volume is mounted, unmounted, or ejected.\r\n\r\n### Authors and Contributors\r\nThis is the brainchild of Tom Metge (@tommetge), used in his unDock app, open sourced to the world because nobody else should have to suffer again.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}